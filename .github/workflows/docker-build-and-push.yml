name: Deploy to VM and ACR

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use Ubuntu runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Check out the repository code

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: qhinhprd.azurecr.io  # Your ACR login server
        username: ${{ secrets.ACR_USERNAME }}  # Username stored in GitHub secrets
        password: ${{ secrets.ACR_PASSWORD }}  # Password stored in GitHub secrets

    - name: Build and push backend image
      run: |
        # Build the backend Docker image and push it to ACR
        docker build -t qhinhprd.azurecr.io/fastapi-backend:latest ./fastapi-backend
        docker push qhinhprd.azurecr.io/fastapi-backend:latest

    - name: Build and push frontend image
      run: |
        # Build the frontend Docker image and push it to ACR
        docker build -t qhinhprd.azurecr.io/my-app:latest ./my-app
        docker push qhinhprd.azurecr.io/my-app:latest

    - name: Set up SSH key
      run: |
        # Create the .ssh directory and add the private key
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa  # Add the private key from GitHub secrets
        chmod 600 ~/.ssh/id_rsa  # Set appropriate permissions for the SSH key

    - name: Deploy to VM
      run: |
        # SSH into the VM and deploy the containers
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} "
          docker pull qhinhprd.azurecr.io/fastapi-backend:latest &&
          docker run -d -p 8000:8000 qhinhprd.azurecr.io/fastapi-backend:latest &&
          docker pull qhinhprd.azurecr.io/my-app:latest &&
          docker run -d -p 3000:3000 qhinhprd.azurecr.io/my-app:latest
        "
